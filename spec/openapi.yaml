swagger: '2.0'
schemes:
  - https
  - http
host: bay-area-networking-guide.herokuapp.com
basePath: /api
info:
  description: |
    A prototype implementation of [this spec](http://www.synergistech.com/bang-leader.html)
    
    # Introduction
    This documentation is for a prototype build of the Bay Area Networking Guide 
    (BANG).  It is fully functional, though populated with placeholder data and 
    not deployed to a production environment.  Further, the NoSQL database used 
    is likely a poor fit and the database schema itself could use considerable 
    development.  There is no frontend or much in the way of input validation, as 
    the primary purpose of the prototype was to raise a fully functional API as 
    something unique to be documented.

    # Specification
    A sketch of the minimum specification is given [here](http://www.synergistech.com/bang-leader.html):
    > At a minimum, the next edition should contain the following information:
    > - the company's name, physical address, switchboard telephone and main fax numbers, main and employment-related URLs, and a brief description of its products and/or services
    > - whether there's a formal in-house technical publications, training, or marketing communications service (and if not, is there a need for a contract solution)
    > - the titles, contact information, and key responsibilities of any technical communications department managers
    > - which tools are in use in technical communications department(s)
    > - whether the company creates content for a global audience
    > - the credentials the company typically seeks in its candidates

    Following that specification in an overly literal way, gives us:
    ```
    {
       "name": "ABC, Inc.",
       "address": "12345 Main Street; Cityville, CA",
       "phone": "(112) 358-1321",
       "fax": "(314) 159-2653",
       "mainUrl": "https: //abcinc.com",
       "employmentUrl": "https: //abcinc.com/careers",
       "description": "ABC makes products and offers services.",
       "techPub": "Yes",
       "training": "No",
       "marketing": "Needed",
       "managers": [
          {
             "name": "Jane Thomas",
             "title": "Director of Technical Communication",
             "contactInfo": "jane.thomas@abcinc.com",
             "reponsibilities": "Directs team of technical writers."
          },
          {
             "name": "Thomas Jane",
             "title": "Manager of Technical Communication",
             "contactInfo": "tom.jane@abcinc.com",
             "reponsibilities": "Manages team of technical writers."
          }
       ],
       "tools": [
          "DITA",
          "MadCap Flare"
       ],
       "global": true,
       "credentials": [
          "STC Practitioner Certificate",
          "STC Expert Certificate"
       ]
    }
    ```
    (https://raw.githubusercontent.com/brandondavid/BANG/master/seed/company.json)

    Of course, it would be far preferable to have Managers, Tools, and 
    Credentials as their own data structures so that they could be used 
    independently of any company.  This would also imply that a better 
    backend would involve a RDBMS.


    # Architecture

    The database is a MongoDB sandbox hosted on AWS through mLab.

    Express.js is used as a web application framework, which greatly 
    facilitates the webapp being RESTful, which makes it easy to have 
    a REST API.

    The API itself is written in Node.js, which means BANG is most of 
    the way to using the classic MEAN (or MERN) stack.  However, the 
    templating engine is simply Mustache to avoid unnecessary overhead.

    The entire application is deployed to AWS through Turbo360 and 
    available at [https://bang-jmbzuf.turbo360-vertex.com/](https://bang-jmbzuf.turbo360-vertex.com/)


    # Data    
    Placeholder data was generated using [this template](https://github.com/brandondavid/BANG/blob/master/seed/json-generator.md) on 
    Vazha Omanashvili's [JSON Generator](https://www.json-generator.com).

    The output required some cleanup, using the Python script located at LINK
    




  version: 0.1.0
  title: Bay Area Networking Guide
  x-logo:
    url: 'https://apis.guru/openapi-template/logo.png'
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: API
    description: API Documentation
paths:
  /company:
#    parameters:
#     - name: Origin
#       in: header
#       description: CORS header
#       type: string
#       default: SwaggerUI
    get:
      tags:
        - API
      summary: Return all companies
      description: Find all companies and return them.
      operationId: getCompany
      parameters:
        - in: query
          name: techPub
          description: Filter companies by formal in-house technical publications.
          type: string
          enum: ['Yes', 'No', 'Needed']
          required: false
        - in: query
          name: training
          description: Filter companies by formal in-house training.
          type: string
          enum: ['Yes', 'No', 'Needed']
          required: false
        - in: query
          name: marketing
          description: Filter companies by formal in-house marketing communications service.
          type: string
          enum: ['Yes', 'No', 'Needed']
          required: false
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Company'
        '403':
          description: Forbidden
        '404':
          description: User not found
    post:
      tags:
        - API
      summary: Add a company
      description: Create a new company.
      operationId: postCompany
      parameters:
        - in: body
          name: company
          description: The company to be added.
          required: true
          schema:
            $ref: '#/definitions/Company'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
  '/company/{id}':
#    parameters:
#     - name: Origin
#       in: header
#       description: CORS header
#       type: string
#       default: SwaggerUI
    get:
      tags:
        - API
      summary: Return a company
      description: Find a specified company and return it.
      operationId: getCompanyById
      parameters:
        - name: id
          in: path
          description: The ID of the company that needs to be fetched
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Company'
        '403':
          description: Forbidden
        '404':
          description: User not found
    put:
      tags:
        - API
      summary: Edit a company
      description: Overwrite a specified company with new data.
      operationId: putCompanyById
      parameters:
        - name: id
          in: path
          description: The ID of the company to be overwritten.
          required: true
          type: string
        - in: body
          name: company
          description: The new version of the company.
          required: true
          schema:
            $ref: '#/definitions/Company'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Company'
        '403':
          description: Forbidden
        '404':
          description: User not found
    delete:
      tags:
        - API
      summary: Remove a company
      description: Delete a specified company from the database.
      operationId: deleteCompanyById
      parameters:
        - name: id
          in: path
          description: The ID of the company to be removed.
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
        '404':
          description: User not found

definitions:
  Company:
    type: object
    properties:
      name:
        description: The company's name.
        type: string
        example: ABC, Inc.
      address:
        description: Physical address.
        type: string
        format: address
        example: 12345 Main Street, Cityville, CA
      phone:
        description: Switchboard telephone number.
        type: string
        format: phone
        example: (112) 358-1321
      fax:
        description: Main fax number.
        type: string
        format: phone
        example: (314) 159-2653
      mainUrl:
        description: Main URL.
        type: string
        format: url
        example: https://abcinc.com
      employmentUrl:
        description: Employment-related URL.
        type: string
        format: url
        example: https://abcinc.com/careers
      description:
        description: Brief description of its products and/or services.
        type: string
        example: ABC makes products and offers services.
      techPub:
        description: Whether there's formal in-house technical publications.
        type: string
        enum: ['Yes', 'No', 'Needed']
        example: 'Yes'
      training:
        description: Whether there's formal in-house training.
        type: string
        enum: ['Yes', 'No', 'Needed']
        example: 'No'
      marketing:
        description: Whether there's a formal in-house marketing communications service.
        type: string
        enum: ['Yes', 'No', 'Needed']
        example: 'Needed'
      managers:
        description: 'The titles, contact information, and key responsibilities of any technical communications department managers.'
        type: array
        items:
          $ref: '#/definitions/Manager'
      tools:
        description: Which tools are in use in technical communications department(s).
        type: array
        items:
          $ref: '#/definitions/Tool'
      global:
        description: Whether the company creates content for a global audience.
        type: boolean
        example: true
      credentials:
        description: The credentials the company typically seeks in its candidates.
        type: array
        items:
          $ref: '#/definitions/Credential'
  Manager:
    description: Technical communications department managers.
    type: object
    properties:
      name:
        description: Full name of manager.
        type: string
        example: Jane Thomas
      title:
        description: Title of manager's position.
        type: string
        example: Director of Technical Communication
      contactInfo:
        description: Email address of manager.
        type: string
        format: email
        example: jane.thomas@abcinc.com
      responsibilities:
        description: Key responsibilities of manager.
        type: string
        example: Directs team of technical writers.
  Tool:
    description: A tool in use in a technical communications department.
    type: string
    example: DITA
  Credential:
    description: A credential a company typically seeks in its candidates.
    type: string
    example: STC Practitioner Certificate
